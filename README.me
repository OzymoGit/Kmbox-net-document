Kmbox is a USB development board. It can simulate and control USB devices such as keyboard and mouse at full hardware level. It does not need to install additional driver to function.

This is an attemp to create a document on how to develop, create software for kmbox net version.


# Requirements
Python 3.x
Windows OS (64 bit)
Installation
Ensure all cables are correctly connected before proceeding.

# Detailed Functions
Below, you'll find a detailed overview of the functions available in kmboxNet and how to use them in your Python project.

# Initialization
init(ip, port, UUID): Initializes the connection to the device. Must be called once at the beginning.

ip: Device's IP address.
port: Port number.
UUID: Unique identifier of the device.

# Mouse Control
move(x, y): Moves the mouse relative to the specified coordinates.

move_auto(x, y, duration): Moves the mouse towards the specified coordinates with a motion that simulates human action, within the time (in milliseconds) defined by duration.

move_beizer(x, y, duration, cx1, cy1, [cx2, cy2]): Moves the mouse along a specified BÃ©zier curve through control points.

left(state): Controls the state of the left mouse button (state can be 0 for release or 1 for press).

right(state): Controls the state of the right mouse button.

middle(state): Controls the state of the middle mouse button.

wheel(direction): Simulates the movement of the mouse wheel. Positive values for scrolling up, negative for down.

# Keyboard Control
keydown(key): Simulates pressing a keyboard key.
keyup(key): Simulates releasing a keyboard key.

# Monitoring and Locking
monitor(enable): Enables or disables monitoring of the physical state of keys and mouse (enable can be 0 or 1).
isdown_left(), isdown_right(), isdown_middle(), isdown_side1(), isdown_side2(): Checks if the respective mouse button is pressed at the time of the call.

Examples of how to use the main functions:

python

# Initialization
kmNet.init('192.168.1.100', '8080', 'UNIQUE-DEVICE-UUID')

# Mouse movement
kmNet.move(100, 100)  # Immediate movement
kmNet.move_auto(1920, 1080, 200)  # Movement simulates human action

# Mouse button press and release
kmNet.left(1)  # Press
kmNet.left(0)  # Release

# Keyboard key press and release
kmNet.keydown(0x04)  # Key 'A'
kmNet.keyup(0x04)

# Monitoring and locking
kmNet.monitor(1)  # Enable monitoring
print(kmNet.isdown_left())  # Check left button state

Make sure to replace values like the IP address, port number, and UUID with those specific to your device.

